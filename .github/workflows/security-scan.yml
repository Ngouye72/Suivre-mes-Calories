name: Security Scan

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: OWASP ZAP Security Scan
    
    steps:
      - uses: actions/checkout@v2
      
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://nutrition-app.com'
          rules_file_name: './deploy/monitoring/security/zap-config.yaml'
          cmd_options: '-a'
          
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: ZAP Security Report
          path: report.html
          
      - name: Slack Notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: security-alerts
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Security Scan Results
          SLACK_MESSAGE: 'Security scan completed. Check the artifacts for detailed report.'
          
  dependency_check:
    runs-on: ubuntu-latest
    name: Dependencies Security Check
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety
          npm install -g snyk
          
      - name: Check Python dependencies
        run: |
          safety check
          
      - name: Check Node.js dependencies
        run: |
          snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
      - name: Upload Dependency Check Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Dependency Check Report
          path: |
            safety-report.txt
            snyk-report.json
            
  secret_scan:
    runs-on: ubuntu-latest
    name: Secret Scanner
    
    steps:
      - uses: actions/checkout@v2
      
      - name: TruffleHog Scan
        uses: trufflesecurity/trufflehog-actions-scan@master
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified
          
      - name: Upload Secret Scan Report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Secret Scan Report
          path: trufflehog-report.json

input {
  beats {
    port => 5044
    type => "logs"
  }
  
  http {
    port => 8080
    codec => json
  }
}

filter {
  if [type] == "logs" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} \[%{DATA:service}\] %{DATA:trace_id} - %{GREEDYDATA:message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    if [service] == "nutrition-api" {
      grok {
        match => { "message" => "%{WORD:http_method} %{URIPATHPARAM:request_path} %{NUMBER:response_time:float}ms %{NUMBER:response_code:int}" }
      }
    }
    
    if [service] == "user-service" {
      grok {
        match => { "message" => "user.%{WORD:action} %{DATA:user_id} %{GREEDYDATA:details}" }
      }
    }
    
    if [service] == "meal-service" {
      grok {
        match => { "message" => "meal.%{WORD:action} %{DATA:meal_id} calories=%{NUMBER:calories:int} user=%{DATA:user_id}" }
      }
    }
  }
  
  mutate {
    add_field => {
      "env" => "${ENV:production}"
      "app_name" => "nutrition-app"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "nutrition-app-%{+YYYY.MM.dd}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
  }
  
  if [log_level] == "ERROR" {
    sns {
      arn => "${SNS_ALERT_TOPIC}"
      region => "eu-west-1"
      message => "Error in %{[service]}: %{[message]}"
      subject => "Nutrition App Error Alert"
    }
  }
  
  if [response_time] and [response_time] > 1000 {
    sns {
      arn => "${SNS_PERFORMANCE_TOPIC}"
      region => "eu-west-1"
      message => "Slow response detected: %{[request_path]} took %{[response_time]}ms"
      subject => "Performance Alert"
    }
  }
}
